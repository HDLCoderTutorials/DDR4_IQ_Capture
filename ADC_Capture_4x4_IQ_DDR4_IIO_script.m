IPAddr = 'ip:192.168.1.101';


%% AXI4 Stream IIO Write registers
% NOTE: This is a place holder based on auto-generated templates. Please modify these values according to your FPGA design
AXI4SReadObj = pspshared.libiio.axistream.read(...
                  'IPAddress',IPAddr,...
                  'SamplesPerFrame',1024,...
                  'DataType','ufix128',...
                  'Timeout',0.1);
setup(AXI4SReadObj);

AXI4SWriteObj = pspshared.libiio.axistream.write(...
                  'IPAddress',IPAddr,...
                  'SamplesPerFrame',1024,...                  
                  'Timeout',0.1);
setup(AXI4SWriteObj,fi(zeros(1024,1),numerictype('ufix128')));


%% AXI4 MM IIO Write registers
ADC_SelectCh =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('11C')); 
TriggerCapture =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('100')); 
DebugCaptureRegister =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('108')); 
ADC_CaptureSize =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('104')); 
DDR4_ReadLength =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('10C')); 
DDR4_ReadAddress =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('110')); 
DDR4_ReadTrigger =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('114')); 
NCO_Incr =  pspshared.libiio.aximm.write(...
                   'IPAddress',IPAddr,...
                   'AddressOffset',hex2dec('118')); 


%% AXI4 MM IIO Read registers
AXI4_S2MM_TreadyLowCount = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('140'),...
                 'DataType','uint32');
AXI4_AXI4S_TlastCheck = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('134'),...
                 'DataType','int32');
AXI4_FIFOCapture_Overflow = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('138'),...
                 'DataType','uint32');
AXI4_FIFODMA_Overflow = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('13C'),...
                 'DataType','uint32');
AXI4_WriteCompleteCount = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('144'),...
                 'DataType','uint32');
AXI4_ReadCompleteCount = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('148'),...
                 'DataType','uint32');
AXI4_AccumulatedWrRdyCount = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('14C'),...
                 'DataType','uint32');
AXI4_WastedWriteCycles = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('150'),...
                 'DataType','uint32');
AXI4_AckLow_Count = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('154'),...
                 'DataType','uint32');
AXI4_CaptureFIFONum = pspshared.libiio.aximm.read(...
                 'IPAddress',IPAddr,...
                 'AddressOffset',hex2dec('158'),...
                 'DataType','uint32');


%% Setup() AXI4 MM IIO Objects
% NOTE: These are placeholder values. Please update this section according to your design

% Setup AXI4MM Read IIO objects
setup(AXI4_S2MM_TreadyLowCount); 
setup(AXI4_AXI4S_TlastCheck); 
setup(AXI4_FIFOCapture_Overflow); 
setup(AXI4_FIFODMA_Overflow); 
setup(AXI4_WriteCompleteCount); 
setup(AXI4_ReadCompleteCount); 
setup(AXI4_AccumulatedWrRdyCount); 
setup(AXI4_WastedWriteCycles); 
setup(AXI4_AckLow_Count); 
setup(AXI4_CaptureFIFONum); 
% Setup AXI4MM Write IIO objects
setup(ADC_SelectCh,uint32(0)); 
setup(TriggerCapture,boolean(0)); 
setup(DebugCaptureRegister,boolean(0)); 
setup(ADC_CaptureSize,uint32(0)); 
setup(DDR4_ReadLength,uint32(0)); 
setup(DDR4_ReadAddress,uint32(0)); 
setup(DDR4_ReadTrigger,boolean(0)); 
setup(NCO_Incr,uint16(0)); 


%% Step() AXI4 MM IIO Objects
% NOTE: These are placeholder values. Please update this section according to your design

% ---- Step AXI4MM Read IIO objects ---- 
% step(AXI4_S2MM_TreadyLowCount); 
% step(AXI4_AXI4S_TlastCheck); 
% step(AXI4_FIFOCapture_Overflow); 
% step(AXI4_FIFODMA_Overflow); 
% step(AXI4_WriteCompleteCount); 
% step(AXI4_ReadCompleteCount); 
% step(AXI4_AccumulatedWrRdyCount); 
% step(AXI4_WastedWriteCycles); 
% step(AXI4_AckLow_Count); 
% step(AXI4_CaptureFIFONum); 
% ---- Step AXI4MM Write IIO objects ---- 
% step(ADC_SelectCh,uint32(0)); 
% step(TriggerCapture,boolean(0)); 
% step(DebugCaptureRegister,boolean(0)); 
% step(ADC_CaptureSize,uint32(0)); 
% step(DDR4_ReadLength,uint32(0)); 
% step(DDR4_ReadAddress,uint32(0)); 
% step(DDR4_ReadTrigger,boolean(0)); 
% step(NCO_Incr,uint16(0)); 
